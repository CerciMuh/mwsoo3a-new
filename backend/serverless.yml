service: mwsoo3a-backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  memorySize: 512
  timeout: 15
  environment:
    NODE_ENV: production
    FRONTEND_URL: ${env:FRONTEND_URL, 'https://mwsoo3a-new.vercel.app'}
    DYNAMO_USERS_TABLE: ${env:DYNAMO_USERS_TABLE, 'Users-${sls:stage}'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:DYNAMO_USERS_TABLE, 'Users-${sls:stage}'}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:DYNAMO_USERS_TABLE, 'Users-${sls:stage}'}/index/email-index
  httpApi:
    cors:
      allowedOrigins:
        - ${env:FRONTEND_URL, 'https://mwsoo3a-new.vercel.app'}
        - http://localhost:5173
        - http://localhost:5175
      allowedHeaders:
        - Content-Type
        - Authorization
        - X-Id-Token
      allowedMethods:
        - GET
        - POST
        - OPTIONS

functions:
  app:
    handler: src/handler.handler
    events:
      - httpApi:
          method: ANY
          path: /{proxy+}

custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: false
    target: node18
    platform: node
    concurrency: 10
    tsconfig: ./tsconfig.json
    exclude: []

package:
  patterns:
    - world_universities.json

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:DYNAMO_USERS_TABLE, 'Users-${sls:stage}'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL

  Outputs:
    UsersTableName:
      Value: ${env:DYNAMO_USERS_TABLE, 'Users-${sls:stage}'}
      Export:
        Name: ${sls:stage}-UsersTableName



plugins:
  - serverless-esbuild
  - serverless-offline
